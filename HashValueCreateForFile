

package com.cts.map;

import java.io.File;

import java.io.FileInputStream;

import java.io.IOException;

import java.security.MessageDigest;

import java.security.NoSuchAlgorithmException;
public class HashValueCreateForFile {
            public static void main(String[] args){
                        try {
                        String filePath ="C:/Users/Mithilesh/abc.xml";
                        //String filePath = args[0];
                        System.out.println("File Path: " + filePath);
                        File file = new File(filePath);
                        String md5Hash = generateMD5(file);
                        System.out.println("MD5 Hash:   " + md5Hash);
                        

                        String sha1Hash = generateSHA1(file);

                        System.out.println("SHA-1 Hash: " + sha1Hash);

           

                        String sha256Hash = generateSHA256(file);

                        System.out.println("SHA-256 Hash: " + sha256Hash);        

             

                    } catch (Exception ex) {

                        ex.printStackTrace();

                    }

                       

            }//main

           

            public static String generateMD5(File file) throws Exception{

                return hashFile(file, "MD5");

            }

           

            public static String generateSHA1(File file) throws Exception  {

                return hashFile(file, "SHA-1");

            }

           

            public static String generateSHA256(File file) throws Exception  {

                return hashFile(file, "SHA-256");

            }

 

            private static String hashFile(File file, String algorithm) throws Exception {

                try (FileInputStream inputStream = new FileInputStream(file)) {

                    MessageDigest digest = MessageDigest.getInstance(algorithm);

           

                    byte[] bytesBuffer = new byte[1024];

                    int bytesRead = -1;

           

                    while ((bytesRead = inputStream.read(bytesBuffer)) != -1) {

                        digest.update(bytesBuffer, 0, bytesRead);

                    }

           

                    byte[] hashedBytes = digest.digest();

           

                    return convertByteArrayToHexString(hashedBytes);

                } catch (NoSuchAlgorithmException | IOException ex) {

                    throw new Exception(

                            "Could not generate hash from file", ex);

                }

            }

 

            private static String convertByteArrayToHexString(byte[] arrayBytes) {

                    StringBuffer stringBuffer = new StringBuffer();

                    for (int i = 0; i < arrayBytes.length; i++) {

                        stringBuffer.append(Integer.toString((arrayBytes[i] & 0xff) + 0x100, 16)

                                .substring(1));

                    }

                    return stringBuffer.toString();

                }

}//class
