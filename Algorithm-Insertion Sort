import java.util.*;

public class InsertionSort
{
	public static void main(String[] args) {
		System.out.println("Hello World");
		int[] arr = {3,6,1,9,4,5,13,10};
		System.out.println(Arrays.toString(arr));  // 3, 6, 1, 9, 4, 5, 13, 10
		arr = insertionSortMaxSwap(arr);
		System.out.println(Arrays.toString(arr));  //  1, 3, 4, 5, 6, 9, 10, 13
	}
	
	private static int[] insertionSortMaxSwap(int[] a) {
		int temp, j,len = a.length;
		boolean flag = false;
		for (int i = 1; i < len; i++) {
			temp = a[i];
			for (j = i - 1; j >= 0; j--) {
				flag = false;
				System.out.println(Arrays.toString(a)+" inner - " + j);
				if (a[j] > temp) {
					a[j + 1] = a[j];
					a[j] = temp;
					flag = true;
				}
				if (!flag)
					break;
			}
		}
		return a;
/*
[3, 6, 1, 9, 4, 5, 13, 10]                                                                                                
[3, 6, 1, 9, 4, 5, 13, 10] inner - 0                                                                                      
[3, 6, 1, 9, 4, 5, 13, 10] inner - 1                                                                                      
[3, 1, 6, 9, 4, 5, 13, 10] inner - 0                                                                                      
[1, 3, 6, 9, 4, 5, 13, 10] inner - 2                                                                                      
[1, 3, 6, 9, 4, 5, 13, 10] inner - 3                                                                                      
[1, 3, 6, 4, 9, 5, 13, 10] inner - 2                                                                                      
[1, 3, 4, 6, 9, 5, 13, 10] inner - 1                                                                                      
[1, 3, 4, 6, 9, 5, 13, 10] inner - 4                                                                                      
[1, 3, 4, 6, 5, 9, 13, 10] inner - 3                                                                                      
[1, 3, 4, 5, 6, 9, 13, 10] inner - 2                                                                                      
[1, 3, 4, 5, 6, 9, 13, 10] inner - 5                                                                                      
[1, 3, 4, 5, 6, 9, 13, 10] inner - 6                                                                                      
[1, 3, 4, 5, 6, 9, 10, 13] inner - 5                                                                                      
[1, 3, 4, 5, 6, 9, 10, 13] 
*/
	}
	
private static int[] insertionSortMinSwap(int[] array) {
		int len = array.length, temp = 0, j = 0;
		for (int i = 1; i < len; i++) {
			temp = array[i];
			for (j = i - 1; j >= 0 && temp < array[j];) {
				System.out.println(Arrays.toString(array)+" inner " + j);
				array[j + 1] = array[j];
				j--;
			}
			array[j + 1] = temp;
		}
		return array;
/*
[3, 6, 1, 9, 4, 5, 13, 10]                                                                                                
[3, 6, 1, 9, 4, 5, 13, 10] inner 1                                                                                        
[3, 6, 6, 9, 4, 5, 13, 10] inner 0                                                                                        
[1, 3, 6, 9, 4, 5, 13, 10] inner 3                                                                                        
[1, 3, 6, 9, 9, 5, 13, 10] inner 2                                                                                        
[1, 3, 4, 6, 9, 5, 13, 10] inner 4                                                                                        
[1, 3, 4, 6, 9, 9, 13, 10] inner 3                                                                                        
[1, 3, 4, 5, 6, 9, 13, 10] inner 6                                                                                        
[1, 3, 4, 5, 6, 9, 10, 13]
*/
}// insertionSort(-,-)

	
}
